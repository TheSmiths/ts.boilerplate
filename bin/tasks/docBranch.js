module.exports = function (options) {
    var utils = require('gulp-util'),
        git = require('gulp-git'),
        exec = require('child_process').exec,
        path = require('path'),
        fs = require('fs'),
        gitUtils = require('../utils/git-utils.js'),
        async = require('async');
    return {
        /* Setup the documentation branch */
        create: function (callback) {
            /* Firstlym checkout a new branch */
            git.checkout('doc', {args: '-b'}, function (err) {
                if (err) { return callback(err); }
                /* We will have to refer to several templates or utils files */
                var gemfile =  path.join(options.root, 'component_files', 'doc', 'jsduck-6.1.0.beta.gem'),
                    gulpfile = path.join(options.root, 'component_files', 'doc', 'gulpfile.js'),
                    jsduckSrc = path.join(options.root, 'component_files', 'doc', 'jsduck.json'),
                    jsduckTo = path.join(options.processRoot, 'jsduck.json');


                /* Install our jsduck modified version if not already installed */
                var installJsDuck = function (done) {
                    utils.log("Installing gem jsduck. Be sure you own the access to system files.");
                    exec('gem list | grep jsduck', function (err, stdout) {
                        if (err) { return done(err); }
                        if (stdout.match(/jsduck \(6\.1\.0\.beta\)/) !== null) { return done(); }
                        exec('gem install ' + gemfile, done); 
                    });
                };

                /* Copy the gulpfile for the config into the project folder */
                var gulpAndConfig = function (done) {
                    utils.log("Copying gulpfile and jsduck config file");
                    exec('cp ' + gulpfile + ' ' + options.processRoot, function (err) {
                        /* Update the .json file to add the name of the component as a title  */
                        var content = JSON.parse(fs.readFileSync(jsduckSrc));
                        content['--title'] = options.name + " 0.1";
                        fs.writeFile(jsduckTo, JSON.stringify(content, null, "    "), function (err) {
                            if (err) { return callback(err); }
                            /* Install gulp to allow gulp CLI to work */
                            exec("npm install gulp", callback);
                        }); 
                    });
                };

                /* Run previous task in parallel, #yolo */
                async.parallel([
                    installJsDuck,
                    gulpAndConfig
                ], callback);
            });
        },

        /* Commit everything on this doc branch */
        addAndCommit: function (callback) {
            utils.log("Adding & commiting files on the doc branch");
            var msg = 'Add autogenerated doc env',
                files = ['jsduck.json', './node_modules', 'gulpfile.js'],
                /* Have to force because node_modules is ignored by gitignore */
                options = '--force --all';
            gitUtils.addAndCommit(files, msg, options, callback);
        }
    };
};
